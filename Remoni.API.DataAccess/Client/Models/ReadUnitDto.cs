// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Remoni.API.DataAccess.Client.Models
{
    using System.Linq;

    public partial class ReadUnitDto
    {
        /// <summary>
        /// Initializes a new instance of the ReadUnitDto class.
        /// </summary>
        public ReadUnitDto() { }

        /// <summary>
        /// Initializes a new instance of the ReadUnitDto class.
        /// </summary>
        /// <param name="dataInterval">Possible values include: 'Minute',
        /// 'Minutes5', 'Seconds20Boost'</param>
        public ReadUnitDto(int unitId, string name, string dataInterval, AccountNoRefsDto account, UnitTypeNoRefsDto unitType, string description = default(string), double? latitude = default(double?), double? longitude = default(double?), double? gpsAccuracy = default(double?), int? imageHash = default(int?), System.Collections.Generic.IList<ReadUnitValueDto> unitValues = default(System.Collections.Generic.IList<ReadUnitValueDto>), System.Collections.Generic.IList<TagNoRefsDto> tags = default(System.Collections.Generic.IList<TagNoRefsDto>), System.Collections.Generic.IList<AlarmGroupNoRefsDto> alarmGroups = default(System.Collections.Generic.IList<AlarmGroupNoRefsDto>))
        {
            UnitId = unitId;
            Name = name;
            Description = description;
            Latitude = latitude;
            Longitude = longitude;
            GpsAccuracy = gpsAccuracy;
            ImageHash = imageHash;
            DataInterval = dataInterval;
            UnitValues = unitValues;
            Account = account;
            UnitType = unitType;
            Tags = tags;
            AlarmGroups = alarmGroups;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UnitId")]
        public int UnitId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "GpsAccuracy")]
        public double? GpsAccuracy { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ImageHash")]
        public int? ImageHash { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Minute', 'Minutes5',
        /// 'Seconds20Boost'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DataInterval")]
        public string DataInterval { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UnitValues")]
        public System.Collections.Generic.IList<ReadUnitValueDto> UnitValues { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Account")]
        public AccountNoRefsDto Account { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UnitType")]
        public UnitTypeNoRefsDto UnitType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Tags")]
        public System.Collections.Generic.IList<TagNoRefsDto> Tags { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AlarmGroups")]
        public System.Collections.Generic.IList<AlarmGroupNoRefsDto> AlarmGroups { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (DataInterval == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DataInterval");
            }
            if (Account == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Account");
            }
            if (UnitType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "UnitType");
            }
            if (this.UnitValues != null)
            {
                foreach (var element in this.UnitValues)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.Account != null)
            {
                this.Account.Validate();
            }
            if (this.UnitType != null)
            {
                this.UnitType.Validate();
            }
            if (this.Tags != null)
            {
                foreach (var element1 in this.Tags)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (this.AlarmGroups != null)
            {
                foreach (var element2 in this.AlarmGroups)
                {
                    if (element2 != null)
                    {
                        element2.Validate();
                    }
                }
            }
        }
    }
}
