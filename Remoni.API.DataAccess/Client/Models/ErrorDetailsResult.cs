// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Remoni.API.DataAccess.Client.Models
{
    using System.Linq;

    public partial class ErrorDetailsResult : ErrorResult
    {
        /// <summary>
        /// Initializes a new instance of the ErrorDetailsResult class.
        /// </summary>
        public ErrorDetailsResult() { }

        /// <summary>
        /// Initializes a new instance of the ErrorDetailsResult class.
        /// </summary>
        public ErrorDetailsResult(string code, string message, System.Collections.Generic.IList<BadRequestError> badRequestErrors = default(System.Collections.Generic.IList<BadRequestError>), System.Collections.Generic.IList<PropertyValueError> propertyValueErrors = default(System.Collections.Generic.IList<PropertyValueError>), System.Collections.Generic.IList<ArrayPropertyValueError> arrayPropertyValueErrors = default(System.Collections.Generic.IList<ArrayPropertyValueError>))
            : base(code, message)
        {
            BadRequestErrors = badRequestErrors;
            PropertyValueErrors = propertyValueErrors;
            ArrayPropertyValueErrors = arrayPropertyValueErrors;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "BadRequestErrors")]
        public System.Collections.Generic.IList<BadRequestError> BadRequestErrors { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PropertyValueErrors")]
        public System.Collections.Generic.IList<PropertyValueError> PropertyValueErrors { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ArrayPropertyValueErrors")]
        public System.Collections.Generic.IList<ArrayPropertyValueError> ArrayPropertyValueErrors { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.BadRequestErrors != null)
            {
                foreach (var element in this.BadRequestErrors)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.PropertyValueErrors != null)
            {
                foreach (var element1 in this.PropertyValueErrors)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (this.ArrayPropertyValueErrors != null)
            {
                foreach (var element2 in this.ArrayPropertyValueErrors)
                {
                    if (element2 != null)
                    {
                        element2.Validate();
                    }
                }
            }
        }
    }
}
