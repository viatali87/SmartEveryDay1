// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Remoni.API.DataAccess.Client.Models
{
    using System.Linq;

    public partial class ReadUserDto
    {
        /// <summary>
        /// Initializes a new instance of the ReadUserDto class.
        /// </summary>
        public ReadUserDto() { }

        /// <summary>
        /// Initializes a new instance of the ReadUserDto class.
        /// </summary>
        public ReadUserDto(int userId, string name, string email, bool isAdmin, System.DateTimeOffset created, System.Collections.Generic.IList<ReadAccountRoleDto> accountRoles = default(System.Collections.Generic.IList<ReadAccountRoleDto>))
        {
            UserId = userId;
            Name = name;
            Email = email;
            IsAdmin = isAdmin;
            Created = created;
            AccountRoles = accountRoles;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UserId")]
        public int UserId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsAdmin")]
        public bool IsAdmin { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Created")]
        public System.DateTimeOffset Created { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AccountRoles")]
        public System.Collections.Generic.IList<ReadAccountRoleDto> AccountRoles { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (Email == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Email");
            }
            if (this.AccountRoles != null)
            {
                foreach (var element in this.AccountRoles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
