// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Remoni.API.DataAccess.Client.Models
{
    using System.Linq;

    public partial class ReadGatewayDto
    {
        /// <summary>
        /// Initializes a new instance of the ReadGatewayDto class.
        /// </summary>
        public ReadGatewayDto() { }

        /// <summary>
        /// Initializes a new instance of the ReadGatewayDto class.
        /// </summary>
        public ReadGatewayDto(int gatewayId, bool hasWifiConnection, bool hasEthernetConnection, bool hasMobileConnection, bool isUpdated, string name = default(string), int? wifiSignalStrength = default(int?), int? mobileSignalStrength = default(int?), AccountNoRefsDto account = default(AccountNoRefsDto), System.DateTimeOffset? lastActivity = default(System.DateTimeOffset?), System.DateTimeOffset? registrationDate = default(System.DateTimeOffset?), string wifiSSID = default(string), System.Collections.Generic.IList<GatewayActivitiesNoRefsDto> sensorActivities = default(System.Collections.Generic.IList<GatewayActivitiesNoRefsDto>), double? latitude = default(double?), double? longitude = default(double?), double? locationAccuracy = default(double?))
        {
            GatewayId = gatewayId;
            Name = name;
            HasWifiConnection = hasWifiConnection;
            HasEthernetConnection = hasEthernetConnection;
            HasMobileConnection = hasMobileConnection;
            WifiSignalStrength = wifiSignalStrength;
            MobileSignalStrength = mobileSignalStrength;
            IsUpdated = isUpdated;
            Account = account;
            LastActivity = lastActivity;
            RegistrationDate = registrationDate;
            WifiSSID = wifiSSID;
            SensorActivities = sensorActivities;
            Latitude = latitude;
            Longitude = longitude;
            LocationAccuracy = locationAccuracy;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "GatewayId")]
        public int GatewayId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "HasWifiConnection")]
        public bool HasWifiConnection { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "HasEthernetConnection")]
        public bool HasEthernetConnection { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "HasMobileConnection")]
        public bool HasMobileConnection { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "WifiSignalStrength")]
        public int? WifiSignalStrength { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "MobileSignalStrength")]
        public int? MobileSignalStrength { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsUpdated")]
        public bool IsUpdated { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Account")]
        public AccountNoRefsDto Account { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LastActivity")]
        public System.DateTimeOffset? LastActivity { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RegistrationDate")]
        public System.DateTimeOffset? RegistrationDate { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "WifiSSID")]
        public string WifiSSID { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "SensorActivities")]
        public System.Collections.Generic.IList<GatewayActivitiesNoRefsDto> SensorActivities { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LocationAccuracy")]
        public double? LocationAccuracy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Account != null)
            {
                this.Account.Validate();
            }
            if (this.SensorActivities != null)
            {
                foreach (var element in this.SensorActivities)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
