// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Remoni.API.DataAccess.Client.Models
{
    using System.Linq;

    public partial class CreateGatewayDto
    {
        /// <summary>
        /// Initializes a new instance of the CreateGatewayDto class.
        /// </summary>
        public CreateGatewayDto() { }

        /// <summary>
        /// Initializes a new instance of the CreateGatewayDto class.
        /// </summary>
        public CreateGatewayDto(int rfuId, AccountIdDto account, string name = default(string), string wifiSSID = default(string), string wifiPassword = default(string), double? latitude = default(double?), double? longitude = default(double?), double? locationAccuracy = default(double?))
        {
            Name = name;
            WifiSSID = wifiSSID;
            WifiPassword = wifiPassword;
            RfuId = rfuId;
            Latitude = latitude;
            Longitude = longitude;
            LocationAccuracy = locationAccuracy;
            Account = account;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "WifiSSID")]
        public string WifiSSID { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "WifiPassword")]
        public string WifiPassword { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RfuId")]
        public int RfuId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LocationAccuracy")]
        public double? LocationAccuracy { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Account")]
        public AccountIdDto Account { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Account == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Account");
            }
            if (this.Account != null)
            {
                this.Account.Validate();
            }
        }
    }
}
